using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Threading;
using Kukac.interfaces;


namespace Kukac.kukac
{
    /// <summary>
    /// Interaction logic for Board.xaml
    /// </summary>
    public partial class Board : UserControl
    {
        public Board()
        {
            InitializeComponent();
            initComponents();
            logic = new Logic(this);
            t = new DispatcherTimer();
            t.Interval = TimeSpan.FromMilliseconds(20);
            t.Tick += new EventHandler(t_Tick);
        }

        void t_Tick(object sender, EventArgs e)
        {
            rajzol();
        }

        /** Creates new form Panel */

        /**
         * 
         */
        Logic logic;
        /**
         * Flag ami azt jelzi a rajzolónak, hogy a pálya egészét rajzolja ki, vagy
         * csak a változásokat.
         * true - a pálya egésze
         * false - változások
         */
        bool egesz;

        private DispatcherTimer t;


        public void indit()
        {
            //nvas.Children.Clear();
            t.Stop();
            logic.restart();
            egesz = true;
            rajzol();
            t.Start();
        }

        public void rajzol()
        {
 
            if (getGraphics() != null)
            {
                if (egesz)
                {
                    logic.rajzol(getGraphics());
                    egesz = false;
                }
                logic.paint(getGraphics());
            }
        }

        //public void formKeyPressed(java.awt.event.KeyEvent evt) {

        //    logic.formKeyPressed(evt);
        //}

        public void paint(Graphics g)
        {
            //super.paint(g);
            logic.rajzol(getGraphics());
            egesz = true;
            Console.WriteLine("okos");
        }

        /** This method is called from within the constructor to
         * initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */

        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents()
        {

            //javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            //this.setLayout(layout);
            //layout.setHorizontalGroup(
            //    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            //    .addGap(0, 621, Short.MAX_VALUE)
            //);
            //layout.setVerticalGroup(
            //    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            //    .addGap(0, 621, Short.MAX_VALUE)
            //);

        }// </editor-fold>//GEN-END:initComponents


        // Variables declaration - do not modify//GEN-BEGIN:variables
        // End of variables declaration//GEN-END:variables
        //public void actionPerformed(ActionEvent e) {
        //    rajzol();
        //}

        Graphics g;
        public Graphics getGraphics()
        {
            if (g == null)
                g = new Graphics(canvas);

            return g;
        }

    }
}
